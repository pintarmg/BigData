## nhl hockey analysis

## the data is in gamlr.  
## You need to first install this, 
## via install.packages("gamlr")

library(gamlr) # loads Matrix as well
help(hockey) # describes the hockey data and shows an example regression

data(hockey) # load the data

# Combine the covariates all together
x <- cBind(config,team,player) # cBind binds together two sparse matrices

# build 'y': home vs away, binary response
y <- goal$homegoal

nhlreg <- gamlr(x, y, 
	free=1:(ncol(config)+ncol(team)), ## free denotes unpenalized columns
	family="binomial", standardize=FALSE)
par(mfrow=c(1,1))
plot(nhlreg)
## coefficients (grab only the players)
# AICc selection 
Baicc <- coef(nhlreg)[colnames(player),]
##get number of non-zero coefficients
sum(Baicc!=0)
##get positive player contributions, exponential functions, and order
nhlpos <- Baicc[Baicc>0]
nhlposfx <- exp(nhlpos)
##look at the top 25
nhlposfx[order(-nhlposfx)[1:25]]
##get negative player contributions, exponential functions, and order
nhlneg <- Baicc[Baicc<0]
nhlneg[order(nhlneg)[1:25]]
##look at the bottom 25
nhlnegfx[order(nhlnegfx)[1:25]]


##Question 2
nhlreg2 <- gamlr(x, y, 
                free=1:(ncol(config)+ncol(team)), ## free denotes unpenalized columns
                family="binomial", standardize=TRUE)
par(mfrow=c(1,1))
plot(nhlreg2)
Baicc2 <- coef(nhlreg2)[colnames(player),]
##check number of coefficients
sum(Baicc2!=0)
##check maximum value and effect
Baicc2[which.max(Baicc2)]
exp(Baicc2[which.max(Baicc2)])
##check minimum value and effect
Baicc2[which.min(Baicc2)]
exp(Baicc2[which.min(Baicc2)])


##Question 3
##run cross-validation lasso on data
cv.nhlreg <- cv.gamlr(x, y, 
                      free=1:(ncol(config)+ncol(team)), ## free denotes unpenalized columns
                      family="binomial", standardize=FALSE)
##log lambda values for all criteria
log(nhlreg$lambda[which.min(AICc(nhlreg))])
log(nhlreg$lambda[which.min(AIC(nhlreg))])
log(nhlreg$lambda[which.min(BIC(nhlreg))])
log(cv.nhlreg$lambda.min)
log(cv.nhlreg$lambda.1se)
##plot cv and all criteria
ll <- log(nhlreg$lambda) ## the sequence of lambdas
par(mfrow=c(1,2))
plot(cv.nhlreg)
plot(ll, AIC(nhlreg)/nrow(goal), 
     xlab="log lambda", ylab="IC/n", pch=21, bg="orange")
abline(v=ll[which.min(AIC(nhlreg))], col="orange", lty=3)
abline(v=ll[which.min(BIC(nhlreg))], col="green", lty=3)
abline(v=ll[which.min(AICc(nhlreg))], col="black", lty=3)
points(ll, BIC(nhlreg)/nrow(goal), pch=21, bg="green")
points(ll, AICc(nhlreg)/nrow(goal), pch=21, bg="black")
legend("topleft", bty="n",
       fill=c("black","orange","green"),legend=c("AICc","AIC","BIC"))


## plot all criteria and cv together
par(mfrow=c(1,1))
plot(nhlreg, col="grey")
abline(v=ll[which.min(AICc(nhlreg))], col="black", lty=2)
abline(v=ll[which.min(AIC(nhlreg))], col="orange", lty=2)
abline(v=ll[which.min(BIC(nhlreg))], col="green", lty=2)
abline(v=log(cv.nhlreg$lambda.min), col="blue", lty=2)
abline(v=log(cv.nhlreg$lambda.1se), col="purple", lty=2)
legend("topright", bty="n", lwd=1, 
       col=c("black","orange","green","blue","purple"),
       legend=c("AICc","AIC","BIC","CV.min","CV.1se"))

##Question 4
##run regression with only player effects
nhlreg3 <- gamlr(player, y, family="binomial", standardize=FALSE)
par(mfrow=c(1,1))
plot(nhlreg3)
## coefficients (grab only the players)
# AICc selection 
Baicc3 <- coef(nhlreg3)[colnames(player),]
##get number of non-zero coefficients
sum(Baicc3!=0) ##all of them, makes sense if there are no other effects
cv.nhlreg3 <- cv.gamlr(player, y, family="binomial", standardize=FALSE)
plot(cv.nhlreg3) ##roughly the same as AICc


##Question +
##traditional career plus-minus
