fx <- read.csv("FXmonthly.csv")
fx <- (fx[2:120,]-fx[1:119,])/(fx[1:119,])
sp <- read.csv("sp500.csv")
ccodes <- read.table("currency_codes.txt")


##Q1
##create correlation matrix
corr <- fx[1:23,]
row.names(corr) <- colnames(fx)

##set values to 0
for(k in 1:23){
  for(j in 1:23){
    corr[k,j] <- 0
  }
}
##fill correlation matrix
for(k in 1:23){
  for(j in 1:23){
    corr[k,j] <- cor(fx[,k],fx[,j])
  }
}

##Q2
pcfx <- prcomp(fx, scale=TRUE)
##check out rotations
summary(pcfx)
##plot roatations
plot(pcfx)
##look at weightings on top 3
round(pcfx$rotation[,1:3],2)
zfx <- predict(pcfx)
zfx[order(zfx[,1])[1:5],1]
zfx[order(-zfx[,1])[1:5],1]
zfx[order(zfx[,1])[1:5],2]
zfx[order(-zfx[,1])[1:5],2]
par(mfrow=c(1,1))
plot(zfx[,1:2], pch=21, main="")
hist(zfx[,1])
##Q3
zdfx <- as.data.frame(zfx)
spr <- sp$sp500
library(gamlr)

kfits <- lapply(1:23, function(K) glm(spr~., data=zdfx[,1:K,drop=FALSE]))
aicc <- sapply(kfits, AICc) 
which.min(aicc) 
min(aicc)
bic <- sapply(kfits, BIC) 
which.min(bic)
min(bic)
##only 3

##equation and in-sample R^2
kfits[[3]]
1 - kfits[[3]]$deviance/kfits[[3]]$null.deviance


##run 5-fold OOS experiment
source("deviance.R")
zdfx2 <- cBind(zdfx,spr)
n <- nrow(zdfx2)
nfold <- 5
foldid <- rep(1:nfold,each=ceiling(n/nfold))[sample(1:n)]
OOS <- rep(NA,nfold)
for(k in 1:nfold){ 
  train <- which(foldid!=k) # train on all but fold `k'
  rfold <- glm(zdfx2$spr~., data=zdfx2[,1:3,drop=FALSE], subset=train)
  predfold <- predict(rfold, newdata=zdfx2[-train,], type="response")
  OOS[k] <- R2(y=zdfx2$spr[-train], pred=predfold)
}
##cv lasso
spPCR <- cv.gamlr(as.matrix(zdfx), spr)
coef(spPCR, select="min")
sum(coef(spPCR,select="min")!=0)
coef(spPCR, select="1se")
sum(coef(spPCR,select="1se")!=0)
segmin <- spPCR$seg.min
seg1se <- spPCR$seg.1se
##chooses a few more, but definitely includes all 3 chosen above
1-spPCR$cvm[segmin]/spPCR$cvm[1]
1-spPCR$cvm[seg1se]/spPCR$cvm[1]
mean(OOS)
##glm with k=3 actually better OOS R^2!
par(mfrow=c(1,2))
plot(aicc, pch=21, bg="maroon", xlab="K", ylab="AICc")
abline(v=3)
plot(spPCR) 
##aicc curve pretty disjointed

##Q4
splasso <- cv.gamlr(as.matrix(fx), spr, nfolds=22)
plot(splasso)
plot(spPCR)
coef(splasso, select="min")
sum(coef(splasso,select="min")!=0)
coef(splasso, select="1se")
sum(coef(splasso,select="1se")!=0)
##min chooses more than PC regression, 1se chooses a lot less
segmin2 <- splasso$seg.min
seg1se2 <- splasso$seg.1se

1-spPCR$cvm[segmin]/spPCR$cvm[1]
1-spPCR$cvm[seg1se]/spPCR$cvm[1]
1-splasso$cvm[segmin2]/splasso$cvm[1]
1-splasso$cvm[seg1se2]/splasso$cvm[1]
##better fit than just regressing onto the raw data

##bonus
mfx <- as.matrix(fx)
par(mfrow=c(1,1))
plot(mfx[1,], type='l', ylab='fx')
for(i in 2:119) 
  lines(mfx[i,], col=rainbow(119)[i])
##not useful, but fairly psychedelic

### marginal regression
phi <- cor(mfx, spr)/apply(mfx,2,sd) 
z <- mfx%*%phi
fwd <- glm(spr ~ z)
summary(fwd)
1-0.1982/0.26463
plot(fwd$fit, spr, pch=21, bg="lightgreen", 
     xlab="marginal regression fit")

### Partial Least Squares
library(textir)
##checking k=2 through 6
summary( fxpls <- pls(x=mfx, y=spr,  K=2) )
plot(fxpls, pch=21, bg=8)
summary( fxpls <- pls(x=mfx, y=spr,  K=3) )
plot(fxpls, pch=21, bg=8)
summary( fxpls <- pls(x=mfx, y=spr,  K=4) )
plot(fxpls, pch=21, bg=8)
summary( fxpls <- pls(x=mfx, y=spr,  K=5) )
plot(fxpls, pch=21, bg=8)
summary( fxpls <- pls(x=mfx, y=spr,  K=6) )
plot(fxpls, pch=21, bg=8)
##corr levels off around 4, so that seems to be the most likely candidate?


#######Matt Olson HW 7########
##What are the latent factors of international currency pricing?
##And how do these factor move against US equities?
##We’re going to investigate underlying factors in currency
##exchange rates and regress the S&P 500 onto this information.
##FX data is in FXmonthly.csv.
##SP500 returns are in sp500csv.
##Currency codes are in currency codes.txt.
##Translate the prices to ‘returns’ via

fx <- read.csv("FXmonthly.csv")
fx <- (fx[2:120,]-fx[1:119,])/(fx[1:119,])

##[1] Discuss correlation amongst dimensions of fx.
##How does this relate to the applicability of factor modelling?
pairs(fx, pch=19, col="blue")
##can see that several of these are highly correlated will pick a few and 
##create a smaller plot that is easier to see

fxpairs <- data.frame(exdnus=fx$exdnus)
fxpairs$exeuus <- fx$exeuus
fxpairs$exszus <- fx$exszus
fxpairs$exsdus <- fx$exsdus
fxpairs$exukus <- fx$exukus
pairs(fxpairs, pch=19, col="blue")

print(dneu <- cor(fx$exdnus, fx$exeuus))
print(dnsz <- cor(fx$exdnus, fx$exszus))
print(eusz <- cor(fx$exeuus, fx$exszus))
print(dnsd <- cor(fx$exdnus, fx$exsdus))
print(eusd <- cor(fx$exeuus, fx$exsdus))
print(szsd <- cor(fx$exszus, fx$exsdus))
print(sduk <- cor(fx$exsdus, fx$exukus))
print(dnuk <- cor(fx$exdnus, fx$exukus))
print(euuk <- cor(fx$exeuus, fx$exukus))
print(szuk <- cor(fx$exszus, fx$exukus))

##correlation between dn and eu is almost 1 and very high for almost all of 
##these pairs multi-collinearity is something we were told to avoid in applied
##regression and tolerated with regularized models will embrace with 
##principle components analysis

##[2] Fit, plot, and interpret principal components.
fx2 <- fx
rownames(fx2) <- NULL
pcafx <- prcomp(fx2, scale=TRUE)
plot(pcafx, main="")
mtext(side=1, "Exchange Rate Principle Components", line=1, font=2)
##majority of effect captured in first principle component

fxpc <- predict(pcafx) 
z <- scale(fx2)%*%pcafx$rotation
all(z==fxpc)

plot(fxpc[,1:2],type="n")
text(x=fxpc[,1], y=fxpc[,2], labels=rownames(fx))

loadings <- pcafx$rotation[,1:2]
hist(loadings[,1], main="", xlab="1st Principle Component Exchange-Loadings",
     col=8, border=grey(.9))
loadings[order(abs(loadings[,1]), decreasing=TRUE),1]
loadings[order(abs(loadings[,2]), decreasing=TRUE),2]

round(pcafx$rotation[,1:2],1)

##[3] Regress SP500 returns onto currency movement factors,
##using both ‘glm on first K’ and lasso techniques.
##Use the results to add to your factor interpretation.

sp500 <- read.csv("sp500.csv")

zdffx <- as.data.frame(fxpc)
spret <- sp500$sp500
summary(spreg <- glm(spret ~ zdffx[,1]))

library(gamlr)
kfits <- lapply(1:20, function(K) glm(spret~., data=zdffx[,1:K,drop=FALSE]))
aicc <- sapply(kfits, AICc) 
which.min(aicc)

bic <- sapply(kfits, BIC) 
which.min(bic)



##[4] Fit lasso to the original covariates and
##describe how it differs from PCR here.

lassoPCFx <- cv.gamlr(x=zdffx, y=spret)
coef(lassoPCFx, s="min") 

par(mfrow=c(1,2))
plot(aicc, pch=21, bg="maroon", xlab="K", ylab="AICc")
plot(lassoPCFx) 

